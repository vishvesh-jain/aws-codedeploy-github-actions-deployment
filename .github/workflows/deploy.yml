name: Build and Deploy

on:
  workflow_dispatch: {}

env:
  applicationfolder: spring-boot-hello-world-example
  AWS_REGION: ap-south-1
  


jobs:
  build:
    name: Build and Package
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2
        name: Checkout Repository

      - name: Install AWS CLI
        run: |
          sudo pip3 install awscli
      
      - name: Install jq
        run: |
          sudo apt-get install -y jq
      
      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ap-south-1
          
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: chmod
        run: chmod -R +x ./.github

      - name: Build and Package Maven
        id: package
        working-directory: ${{ env.applicationfolder }}
        run: $GITHUB_WORKSPACE/.github/scripts/build.sh

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: war-artifact
          path: ${{ env.applicationfolder }}/target/*.war
          
      #- name: Upload Artifact to s3
        #working-directory: ${{ env.applicationfolder }}/target
        #run: aws s3 cp *.war s3://${{ env.S3BUCKET }}/
        
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: Dev
    permissions:
      id-token: write
      contents: read
    steps:
    - uses: actions/checkout@v2
    - name: Install AWS CLI
      run: |
          sudo pip3 install awscli
      
    - name: Install jq
      run: |
          sudo apt-get install -y jq
    - name: Download artifact from build job
      uses: actions/download-artifact@v2
      with:
          name: war-artifact

          
    - name: Running test commands
      run : |
       ls -lhtra .
       echo $(pwd)
       echo $(hostname)
       echo $(whoami)
       
    - name: Print Current Directory
      run: |
          echo "Current Directory: $(pwd)"
    - name: Print Run Job ID
      run: |
        echo "Run Job ID: ${{ github.run_id }}" > /aws/output.txt

    - name: Print Repository Name
      run: |
        echo "Repository: ${{ github.repository }}" >> /aws/output.txt

    - name: View Output
      run: cat output.txt
    
    - name: Configure AWS credentials
      run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ap-south-1
    - name: Deploy to CodeDeploy
      run: |
        echo "Deploying branch ${{ env.GITHUB_REF }} to ${{ github.event.inputs.environment }}"
        commit_hash=`git rev-parse HEAD`
        #aws deploy create-deployment --application-name Sample-Spring --deployment-group-name Sample-GithubV2 --github-location repository=$GITHUB_REPOSITORY,commitId=$commit_hash --ignore-application-stop-failures
